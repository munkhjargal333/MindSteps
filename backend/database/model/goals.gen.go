// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameGoals = "goals"

// Goals mapped from table <goals>
type Goals struct {
	ID                 uint        `gorm:"column:id;type:integer;primaryKey;autoIncrement:true" json:"id"`
	UserID             uint        `gorm:"column:user_id;type:integer;not null" json:"user_id"`
	ValueID            *uint       `gorm:"column:value_id;type:integer" json:"value_id"`
	Title              string      `gorm:"column:title;type:character varying(255);not null" json:"title"`
	Description        string      `gorm:"column:description;type:text" json:"description"`
	GoalType           string      `gorm:"column:goal_type;type:character varying(20)" json:"goal_type"`
	TargetDate         time.Time   `gorm:"column:target_date;type:date" json:"target_date"`
	Status             string      `gorm:"column:status;type:character varying(20);default:active" json:"status"`
	ProgressPercentage int         `gorm:"column:progress_percentage;type:integer" json:"progress_percentage"`
	IsPublic           bool        `gorm:"column:is_public;type:boolean" json:"is_public"`
	CreatedAt          time.Time   `gorm:"column:created_at;type:timestamp without time zone;default:now()" json:"created_at"`
	UpdatedAt          time.Time   `gorm:"column:updated_at;type:timestamp without time zone;default:now()" json:"updated_at"`
	CompletedAt        time.Time   `gorm:"column:completed_at;type:timestamp without time zone" json:"completed_at"`
	User               *Users      `gorm:"foreignKey:user_id;references:id" json:"user"`
	Value              *CoreValues `gorm:"foreignKey:value_id;references:id" json:"value"`
}

// TableName Goals's table name
func (*Goals) TableName() string {
	return TableNameGoals
}
