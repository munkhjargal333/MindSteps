// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameUserPreferences = "user_preferences"

// UserPreferences mapped from table <user_preferences>
type UserPreferences struct {
	ID                 uint      `gorm:"column:id;type:integer;primaryKey;autoIncrement:true" json:"id"`
	UserID             uint      `gorm:"column:user_id;type:integer;not null" json:"user_id"`
	ReminderJournal    bool      `gorm:"column:reminder_journal;type:boolean;default:true" json:"reminder_journal"`
	ReminderMoodCheck  bool      `gorm:"column:reminder_mood_check;type:boolean;default:true" json:"reminder_mood_check"`
	ReminderMeditation bool      `gorm:"column:reminder_meditation;type:boolean;default:true" json:"reminder_meditation"`
	ReminderTime       string    `gorm:"column:reminder_time;type:character varying(5);default:20:00" json:"reminder_time"`
	NotificationEmail  bool      `gorm:"column:notification_email;type:boolean;default:true" json:"notification_email"`
	NotificationPush   bool      `gorm:"column:notification_push;type:boolean;default:true" json:"notification_push"`
	PrivacyLevel       string    `gorm:"column:privacy_level;type:character varying(20);default:private" json:"privacy_level"`
	Theme              string    `gorm:"column:theme;type:character varying(20);default:light" json:"theme"`
	Language           string    `gorm:"column:language;type:character varying(5);default:en" json:"language"`
	CreatedAt          time.Time `gorm:"column:created_at;type:timestamp without time zone;default:now()" json:"created_at"`
	UpdatedAt          time.Time `gorm:"column:updated_at;type:timestamp without time zone;default:now()" json:"updated_at"`
	User               *Users    `gorm:"foreignKey:user_id;references:id" json:"user"`
}

// TableName UserPreferences's table name
func (*UserPreferences) TableName() string {
	return TableNameUserPreferences
}
