// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameNotifications = "notifications"

// Notifications mapped from table <notifications>
type Notifications struct {
	ID               uint      `gorm:"column:id;type:integer;primaryKey;autoIncrement:true" json:"id"`
	UserID           uint      `gorm:"column:user_id;type:integer;not null" json:"user_id"`
	Title            string    `gorm:"column:title;type:character varying(255);not null" json:"title"`
	Message          string    `gorm:"column:message;type:text" json:"message"`
	NotificationType string    `gorm:"column:notification_type;type:character varying(50)" json:"notification_type"`
	IsRead           bool      `gorm:"column:is_read;type:boolean" json:"is_read"`
	ActionURL        string    `gorm:"column:action_url;type:character varying(500)" json:"action_url"`
	ScheduledFor     time.Time `gorm:"column:scheduled_for;type:timestamp without time zone" json:"scheduled_for"`
	SentAt           time.Time `gorm:"column:sent_at;type:timestamp without time zone" json:"sent_at"`
	CreatedAt        time.Time `gorm:"column:created_at;type:timestamp without time zone;default:now()" json:"created_at"`
	User             *Users    `gorm:"foreignKey:user_id;references:id" json:"user"`
}

// TableName Notifications's table name
func (*Notifications) TableName() string {
	return TableNameNotifications
}
